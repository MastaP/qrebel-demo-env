<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>During this job, PetClinic SpringBoot application is downloaded, compiled and integration test are executed. QRebel agent is attached to the running application so that is how statistics are gathered to the dashboard. After phase verification is done, QRebel plugin does the call to QRebel API and according to preferences build is marked as SUCCESSFUL or FAILED.&#xd;
&#xd;
Parameters:&#xd;
TARGETVERSION - specify target build in QRebel&#xd;
APPNAME - specify name of the application in QRebel</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TARGETVERSION</name>
          <description>Specify target build version, eg 1.0.2</description>
          <defaultValue>1.0.0</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>APPNAME</name>
          <description>Specify name of application in QRebel</description>
          <defaultValue>PetClinicJenkins</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/sten711/qrebel-springboot.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cp /home/jenkins/qrebel-agent.jar qrebel-agent.jar
echo $APPNAME
echo $TARGETVERSION</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Maven>
      <targets>clean compile package</targets>
      <pom>pom.xml</pom>
      <properties>skipUTs=true
maven.test.failure.ignore</properties>
      <usePrivateRepository>false</usePrivateRepository>
      <settings class="jenkins.mvn.DefaultSettingsProvider"/>
      <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
      <injectBuildVariables>false</injectBuildVariables>
    </hudson.tasks.Maven>
    <hudson.tasks.Maven>
      <targets>verify</targets>
      <pom>pom.xml</pom>
      <properties>agentPath=qrebel-agent.jar
appName=$APPNAME
appBuild=$TARGETVERSION
skipUTs=true</properties>
      <usePrivateRepository>false</usePrivateRepository>
      <settings class="jenkins.mvn.DefaultSettingsProvider"/>
      <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
      <injectBuildVariables>false</injectBuildVariables>
    </hudson.tasks.Maven>
    <io.jenkins.plugins.qrebel.QRebelBuilder plugin="qrebel-jenkins@1.0-SNAPSHOT">
      <appName>$APPNAME</appName>
      <target>$TARGETVERSION</target>
      <baseline>1.0.0</baseline>
      <apiKey>31321c9b-7ca0-434e-8720-bb5a1bc496d4</apiKey>
      <entryPoints></entryPoints>
      <durationFail>2</durationFail>
      <ioFail>5</ioFail>
      <exceptionFail>0</exceptionFail>
    </io.jenkins.plugins.qrebel.QRebelBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>